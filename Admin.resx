<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        CfwP8z25PbtPHG0AAAAASUVORK5CYII=
</value>
  </data>
</root>